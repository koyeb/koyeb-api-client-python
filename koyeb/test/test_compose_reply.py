# coding: utf-8

"""
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests.

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from koyeb.models.compose_reply import ComposeReply


class TestComposeReply(unittest.TestCase):
    """ComposeReply unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ComposeReply:
        """Test ComposeReply
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ComposeReply`
        """
        model = ComposeReply()
        if include_optional:
            return ComposeReply(
                app = koyeb.models.app.App(
                    id = '', 
                    name = '', 
                    organization_id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    succeeded_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    paused_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    resumed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    terminated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'STARTING', 
                    messages = [
                        ''
                        ], 
                    version = '', 
                    domains = [
                        koyeb.models.domain.Domain(
                            id = '', 
                            organization_id = '', 
                            name = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            type = 'AUTOASSIGNED', 
                            app_id = '', 
                            deployment_group = '', 
                            verified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            intended_cname = '', 
                            version = '', 
                            cloudflare = koyeb.models.domain/load_balancer_cloudflare.Domain.LoadBalancerCloudflare(), 
                            koyeb = koyeb.models.domain/load_balancer_koyeb.Domain.LoadBalancerKoyeb(
                                request_timeout_seconds = 56, ), )
                        ], ),
                services = [
                    koyeb.models.service.Service(
                        id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        succeeded_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        paused_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        resumed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        terminated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        type = 'INVALID_TYPE', 
                        organization_id = '', 
                        app_id = '', 
                        status = 'STARTING', 
                        messages = [
                            ''
                            ], 
                        version = '', 
                        active_deployment_id = '', 
                        latest_deployment_id = '', 
                        last_provisioned_deployment_id = '', 
                        state = koyeb.models.service_state.ServiceState(
                            desired_deployment = koyeb.models.desired_deployment.DesiredDeployment(
                                groups = [
                                    koyeb.models.desired_deployment/group.DesiredDeployment.Group(
                                        name = '', 
                                        deployment_ids = [
                                            ''
                                            ], )
                                    ], ), 
                            auto_release = koyeb.models.auto_release.AutoRelease(), ), )
                    ]
            )
        else:
            return ComposeReply(
        )
        """

    def testComposeReply(self):
        """Test ComposeReply"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
