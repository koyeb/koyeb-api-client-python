# coding: utf-8

"""
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests.

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from koyeb.models.get_deployment_scaling_reply_item import GetDeploymentScalingReplyItem


class TestGetDeploymentScalingReplyItem(unittest.TestCase):
    """GetDeploymentScalingReplyItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDeploymentScalingReplyItem:
        """Test GetDeploymentScalingReplyItem
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetDeploymentScalingReplyItem`
        """
        model = GetDeploymentScalingReplyItem()
        if include_optional:
            return GetDeploymentScalingReplyItem(
                region = '',
                replica_index = 56,
                instances = [
                    koyeb.models.instance.Instance(
                        id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        organization_id = '', 
                        app_id = '', 
                        service_id = '', 
                        regional_deployment_id = '', 
                        allocation_id = '', 
                        type = '', 
                        replica_index = 56, 
                        region = '', 
                        datacenter = '', 
                        hypervisor = '', 
                        status = 'ALLOCATING', 
                        messages = [
                            ''
                            ], 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        succeeded_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        terminated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        xyz_deployment_id = '', )
                    ]
            )
        else:
            return GetDeploymentScalingReplyItem(
        )
        """

    def testGetDeploymentScalingReplyItem(self):
        """Test GetDeploymentScalingReplyItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
