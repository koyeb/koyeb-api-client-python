# coding: utf-8

"""
    Koyeb Rest API

    The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from koyeb.api.models.get_snapshot_reply import GetSnapshotReply

class TestGetSnapshotReply(unittest.TestCase):
    """GetSnapshotReply unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSnapshotReply:
        """Test GetSnapshotReply
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSnapshotReply`
        """
        model = GetSnapshotReply()
        if include_optional:
            return GetSnapshotReply(
                snapshot = koyeb.api.models.snapshot.Snapshot(
                    id = '', 
                    name = '', 
                    size = 56, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    organization_id = '', 
                    parent_volume_id = '', 
                    region = '', 
                    status = 'SNAPSHOT_STATUS_INVALID', 
                    type = 'SNAPSHOT_TYPE_INVALID', )
            )
        else:
            return GetSnapshotReply(
        )
        """

    def testGetSnapshotReply(self):
        """Test GetSnapshotReply"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
