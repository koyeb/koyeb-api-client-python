# coding: utf-8

"""
    Koyeb Rest API

    The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from koyeb.models.get_regional_deployment_reply import GetRegionalDeploymentReply


class TestGetRegionalDeploymentReply(unittest.TestCase):
    """GetRegionalDeploymentReply unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetRegionalDeploymentReply:
        """Test GetRegionalDeploymentReply
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetRegionalDeploymentReply`
        """
        model = GetRegionalDeploymentReply()
        if include_optional:
            return GetRegionalDeploymentReply(
                regional_deployment = koyeb.models.regional_deployment.RegionalDeployment(
                    id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    allocated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    succeeded_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    terminated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    organization_id = '', 
                    app_id = '', 
                    service_id = '', 
                    region = '', 
                    parent_id = '', 
                    child_id = '', 
                    status = 'PENDING', 
                    messages = [
                        ''
                        ], 
                    definition = koyeb.models.regional_deployment_definition.RegionalDeploymentDefinition(
                        name = '', 
                        type = 'INVALID', 
                        routes = [
                            koyeb.models.route.Route(
                                port = 56, 
                                path = '', )
                            ], 
                        ports = [
                            koyeb.models.port.Port(
                                port = 56, 
                                protocol = '', )
                            ], 
                        env = [
                            koyeb.models.env.Env(
                                key = '', 
                                value = '', 
                                secret = '', )
                            ], 
                        region = '', 
                        scaling = koyeb.models.scaling.Scaling(
                            min = 56, 
                            max = 56, ), 
                        instance_type = '', 
                        deployment_group = '', 
                        health_checks = [
                            koyeb.models.deployment_health_check.DeploymentHealthCheck(
                                grace_period = 56, 
                                interval = 56, 
                                restart_limit = 56, 
                                timeout = 56, 
                                tcp = koyeb.models.tcp_health_check.TCPHealthCheck(
                                    port = 56, ), 
                                http = koyeb.models.http_health_check.HTTPHealthCheck(
                                    port = 56, 
                                    path = '', 
                                    method = '', 
                                    headers = [
                                        koyeb.models.http_header.HTTPHeader(
                                            key = '', 
                                            value = '', )
                                        ], ), )
                            ], 
                        skip_cache = True, 
                        docker = koyeb.models.docker_source.DockerSource(
                            image = '', 
                            command = '', 
                            args = [
                                ''
                                ], 
                            image_registry_secret = '', 
                            entrypoint = [
                                ''
                                ], 
                            privileged = True, ), 
                        git = koyeb.models.git_source.GitSource(
                            repository = '', 
                            branch = '', 
                            tag = '', 
                            sha = '', 
                            build_command = '', 
                            run_command = '', 
                            no_deploy_on_push = True, 
                            workdir = '', 
                            buildpack = koyeb.models.buildpack_builder.BuildpackBuilder(
                                build_command = '', 
                                run_command = '', 
                                privileged = True, ), ), ), 
                    datacenters = [
                        ''
                        ], 
                    metadata = koyeb.models.regional_deployment_metadata.RegionalDeploymentMetadata(
                        runtime_job_id = '', ), 
                    provisioning_info = koyeb.models.deployment_provisioning_info.DeploymentProvisioningInfo(
                        sha = '', 
                        image = '', 
                        stages = [
                            koyeb.models.deployment_provisioning_info/stage.DeploymentProvisioningInfo.Stage(
                                name = '', 
                                started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                build_attempts = [
                                    koyeb.models.deployment_provisioning_info/stage/build_attempt.DeploymentProvisioningInfo.Stage.BuildAttempt(
                                        id = 56, 
                                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], )
                            ], ), 
                    version = '', 
                    deployment_group = '', 
                    deployment_id = '', )
            )
        else:
            return GetRegionalDeploymentReply(
        )
        """

    def testGetRegionalDeploymentReply(self):
        """Test GetRegionalDeploymentReply"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
